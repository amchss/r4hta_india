{
  "hash": "9a46fa5c0233c70c95cdfc9bed111858",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Probability Distributions for Health Technology Assessment\"\nformat: \n  html:\n    toc: true\n    theme: cosmo\nembed-resources: true\ncode-fold: true\n---\n\n\n\n\n## What is a Probability Distribution?\n\nA probability distribution is a mathematical function that describes the likelihood—or probability—of each possible outcome of a random experiment.\n\nWe can visualize this with two axes:\n\n*   **The X-Axis (Horizontal):** This represents all **possible values** that the variable can take. This could be clinical outcomes like cost, survival time, utility scores, or the number of adverse events.\n*   **The Y-Axis (Vertical):** This represents the **probability** (or relative likelihood) of each of those values occurring.\n\n> **In short: A probability distribution defines how likely different future outcomes are.**\n\n### A Simple Example: The Coin Flip\nImagine flipping a fair coin twice and counting the number of heads. The possible outcomes (X) are 0, 1, or 2 heads.\n\nThe probability distribution for this experiment is:\n\n| Number of Heads (X) | Probability P(X) |\n| :------------------ | :--------------- |\n| 0                   | 0.25             |\n| 1                   | 0.50             |\n| 2                   | 0.25             |\n\nWe can plot this. The x-axis would have the values 0, 1, and 2. The y-axis would show the probabilities 0.25, 0.50, and 0.25 as bars. This is a simple **discrete probability distribution**.\n\n### Visualizing the Distribution\n\nWhile the table is useful, it is often easier to understand a probability distribution by looking at its graph. The visual representation makes the \"shape\" of the distribution immediately clear.\n\nLet's plot the coin flip example using R's `ggplot2` package, which is powerful for creating elegant and customizable graphics. For a discrete distribution like this, we use a **bar plot** (or a spike plot), where the height of each bar corresponds to the probability of each outcome.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2) # Load the ggplot2 package\n\n# Create a data frame from our table\ncoin_data <- data.frame(\n  Heads = c(0, 1, 2),           # X-axis values (Number of Heads)\n  Probability = c(0.25, 0.50, 0.25) # Y-axis values (Probability)\n)\n\n# Create the plot using ggplot2\nggplot(data = coin_data, aes(x = Heads, y = Probability)) +\n  geom_col(fill = \"steelblue\", width = 0.6) +      # Create bars\n  geom_text(aes(label = Probability), vjust = -0.5) + # Add labels on top of bars\n  scale_x_continuous(breaks = c(0, 1, 2)) +        # Ensure all values are on x-axis\n  labs(title = \"Probability Distribution of Two Coin Flips\",\n       x = \"Number of Heads (X)\",\n       y = \"Probability P(X)\") +\n  theme_minimal() +                                # Use a clean theme\n  ylim(0, 0.6)                                     # Set the y-axis limits\n```\n\n::: {.cell-output-display}\n![Bar plot of the probability distribution for the number of heads in two coin flips, created with ggplot2.](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\n## Types of Probability Distributions\n\n### Discrete Probability Distributions\n\n- These describe the probabilities of outcomes for countable, distinct values—such as 0, 1, 2, etc.\n\n- The probability of each possible value is given by a probability mass function (PMF).\n\nMajor discrete distributions in health data include:\n\n| Distribution | PMF, $P(X=k)$ | Parameters |\n| :--- | :--- | :--- |\n| **Bernoulli** | $p^k (1-p)^{1-k}$ | `prob` ($p$) |\n| **Binomial** | $\\binom{n}{k} p^k (1-p)^{n-k}$ | `size` ($n$), `prob` ($p$) |\n| **Poisson** | $\\frac{\\lambda^k e^{-\\lambda}}{k!}$ | `lambda` ($\\lambda$) |\n| **Negative Binomial**| $\\binom{k + r - 1}{k} p^r (1-p)^k$ | `size` ($r$), `prob` ($p$) |\n\n### Continuous Probability Distributions\n\n- These describe probabilities for any value within an interval (not just whole numbers, but all real values within a range).\n\n- The probability is given by a probability density function (PDF); probabilities refer to intervals, not exact values.\n\nMajor continuous distributions in health and medical research include:\n\n\n| Distribution | PDF, $f(x)$ | Parameters |\n| :--- | :--- | :--- |\n| **Normal** | $\\frac{1}{\\sigma\\sqrt{2\\pi}} e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2}$ | `mean` ($\\mu$), `sd` ($\\sigma$) |\n| **Log-Normal** | $\\frac{1}{x\\sigma\\sqrt{2\\pi}} e^{-\\frac{(\\ln x - \\mu)^2}{2\\sigma^2}}$ | `meanlog` ($\\mu$), `sdlog` ($\\sigma$) |\n| **Exponential** | $\\lambda e^{-\\lambda x}$ | `rate` ($\\lambda$) |\n| **Gamma** | $\\frac{\\beta^{\\alpha}}{\\Gamma(\\alpha)} x^{\\alpha-1} e^{-\\beta x}$ | `shape` ($\\alpha$), `rate` ($\\beta$) |\n| **Weibull** | $\\frac{k}{\\lambda} \\left( \\frac{x}{\\lambda} \\right)^{k-1} e^{-(x/\\lambda)^k}$ | `shape` ($k$), `scale` ($\\lambda$) |\n| **Beta** | $\\frac{x^{\\alpha-1}(1-x)^{\\beta-1}}{B(\\alpha, \\beta)}$ | `shape1` ($\\alpha$), `shape2` ($\\beta$) |\n\n## Parameters of Probability Distributions\n\nNow that you have seen the mathematical equations defining different probability distributions, you might have noticed many terms inside these formulas—like $\\mu$, $\\sigma$, $\\lambda$, $\\alpha$, and $k$. These terms are called the parameters of a distribution.\n\n### Why Are Parameters Important?\n\n- The shape or curve of each probability distribution is determined by the values of these parameters.\n\n- They control where the distribution is centered, how spread out it is, and how it is skewed or shaped.\n\n- Although the formulas might look complicated at first, understanding these parameters gives you a powerful way to describe and work with uncertainty in Health Technology Assessment.\n\n### Three Major Types of Parameters\n\nMost distributions have some combination of these key parameter types:\n\n*   **Location Parameter ($\\mu$, mean):** Defines the \"center\" or position of the distribution on the x-axis.\n*   **Scale Parameter ($\\sigma$, variance):** Defines the spread or variability of the distribution.\n*   **Shape Parameter ($k$, $\\alpha$, $\\beta$):** Controls the overall form or peakness/skewness of the distribution.\n\n> **Note:** Not all distributions require all three parameter types. Some have additional or transformed parameters (e.g., the `rate` in an Exponential distribution), but the broad concepts of location, scale, and shape cover most cases.\n\n### Detailed Examples of Parameter Types\n\n#### 1. Location Parameter ($\\mu$)\nA location parameter shifts the entire distribution along the x-axis without changing its spread or shape.\n\n**Example: Normal Distribution with Constant Scale**\n\nTwo Normal distributions with the same standard deviation ($\\sigma = 1$) but different means:\n\n- $N(\\mu=0, \\sigma=1)$ is centered at 0\n- $N(\\mu=2, \\sigma=1)$ is centered at 2\n\nThe change in $\\mu$ moves the center of the bell curve.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncurve(dnorm(x, mean = 0, sd = 1), from = -7, to = 7, col = \"blue\", lwd = 2, ylab = \"Density\", xlab = \"x\", main = \"Location Parameter (Normal Distribution)\")\ncurve(dnorm(x, mean = 2, sd = 1), col = \"red\", lwd = 2, add = TRUE)\nlegend(\"topright\", legend = c(\"N(0,1)\", \"N(2,1)\"), col = c(\"blue\", \"red\"), lwd = 2)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n\n#### 2. Scale Parameter ($\\sigma$)\nA scale parameter stretches or squeezes the distribution, changing its spread without changing its location or fundamental shape.\n\n**Example: Normal Distribution with Constant Location**\nTwo Normal distributions with the same mean ($\\mu = 0$) but different standard deviations:\n- $N(\\mu=0, \\sigma=1)$ is narrow and tall\n- $N(\\mu=0, \\sigma=2)$ is wide and short\nThe change in $\\sigma$ alters the variability.\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncurve(dnorm(x, mean = 0, sd = 1), from = -6, to = 6, col = \"darkgreen\", lwd = 2, ylab = \"Density\", xlab = \"x\", main = \"Scale Parameter (Normal Distribution)\")\ncurve(dnorm(x, mean = 0, sd = 2), col = \"orange\", lwd = 2, add = TRUE)\nlegend(\"topright\", legend = c(\"N(0,1)\", \"N(0,2)\"), col = c(\"darkgreen\", \"orange\"), lwd = 2)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n\n\n> The Normal distribution does not have a separate shape parameter. Its symmetric bell curve shape is constant and determined solely by $\\mu$ and $\\sigma$.\n\n#### 3. Shape Parameter ($\\alpha$, $\\beta$)\nShape parameters control the fundamental form of the distribution, such as its skewness or peakedness.\n\n**Example: Beta Distribution**\nThe Beta distribution uses two shape parameters ($\\alpha$, $\\beta$):\n\n- $\\alpha = \\beta = 1$: Uniform distribution\n- $\\alpha < \\beta$: Right-skewed distribution\n- $\\alpha > \\beta$: Left-skewed distribution\n- $\\alpha = \\beta > 1$: Bell-shaped and symmetric\nChanging $\\alpha$ and $\\beta$ fundamentally alters the distribution's shape.\n\n\n**Chunk 3: Shape Parameter Plot**\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ncurve(dbeta(x, shape1 = 0.5, shape2 = 0.5), from = 0, to = 1, col = \"red\", lwd = 2, ylab = \"Density\", xlab = \"x\", main = \"Shape Parameters (Beta Distribution)\")\ncurve(dbeta(x, shape1 = 2, shape2 = 5), col = \"blue\", lwd = 2, add = TRUE)\ncurve(dbeta(x, shape1 = 5, shape2 = 2), col = \"green\", lwd = 2, add = TRUE)\ncurve(dbeta(x, shape1 = 2, shape2 = 2), col = \"purple\", lwd = 2, add = TRUE)\nlegend(\"top\", legend = c(\"Beta(0.5,0.5)\", \"Beta(2,5)\", \"Beta(5,2)\", \"Beta(2,2)\"), \n       col = c(\"red\", \"blue\", \"green\", \"purple\"), lwd = 2, cex = 0.8)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n\n## Transforming Mean and SD into Distribution Parameters\n\nIn HTA, we often only have summary statistics (mean and standard deviation) for a parameter. The following formulas are used to estimate the parameters of common distributions for probabilistic sensitivity analysis.\n\n| Distribution | Parameters to Find | Conversion Formulas |\n| :--- | :--- | :--- |\n| **Normal** | `mean` ($\\mu$), `sd` ($\\sigma$) | $\\mu = \\bar{x}$ <br> $\\sigma = s$ |\n| **Gamma** | `shape` ($\\alpha$), `rate` ($\\beta$) | $\\alpha = \\frac{\\bar{x}^2}{s^2}$ <br> $\\beta = \\frac{\\bar{x}}{s^2}$ |\n| **Log-Normal** | `meanlog` ($\\mu$), `sdlog` ($\\sigma$) | $\\mu = \\ln\\left(\\frac{\\bar{x}^2}{\\sqrt{s^2 + \\bar{x}^2}}\\right)$ <br> $\\sigma = \\sqrt{\\ln\\left(1 + \\frac{s^2}{\\bar{x}^2}\\right)}$ |\n| **Beta** | `shape1` ($\\alpha$), `shape2` ($\\beta$) | $\\alpha = \\bar{x} \\left( \\frac{\\bar{x}(1-\\bar{x})}{s^2} - 1 \\right)$ <br> $\\beta = (1 - \\bar{x}) \\left( \\frac{\\bar{x}(1-\\bar{x})}{s^2} - 1 \\right)$ |\n\nWhere:\n- $\\bar{x}$ = sample mean\n- $s$ = sample standard deviation\n- $s^2$ = sample variance\n\n> **Important Note for Beta Distribution:** The formulas for the Beta distribution assume the data represents proportions bounded between 0 and 1. Ensure your mean and SD are appropriate for this scale.\n\n\n## When to Use Each Distribution in HTA\n\nDifferent types of data in HTA require different probability distributions for accurate modeling. Here's a guide based on outcome types:\n\n| Data Type | Common Distributions | Notes on Use |\n| :--- | :--- | :--- |\n| **Binary Outcomes** | Bernoulli, Binomial | Models presence/absence (e.g., treatment success/failure) |\n| **Counts of Events** | Poisson, Negative Binomial | Number of adverse events, hospital visits; Negative Binomial handles overdispersion |\n| **Continuous Measurements** | Normal, Log-normal, Gamma, Weibull | Biomarkers, costs, survival times; Log-normal and Gamma handle skewed data |\n| **Time-to-event Data** | Exponential, Weibull | Models survival times, waiting times, or time to relapse |\n| **Proportions/Fractions** | Beta | Health utilities, probabilities constrained between 0 and 1 |\n\n\n## Working with Distributions in R\n\nR provides a consistent set of functions for working with probability distributions, following a standard naming pattern:\n\n### The Four Key Functions\n\n| Prefix | Purpose | Example (Normal) |\n| :--- | :--- | :--- |\n| **`d`** | Density or Probability Mass Function (PDF/PMF) | `dnorm(x, mean, sd)` |\n| **`p`** | Cumulative Distribution Function (CDF) | `pnorm(q, mean, sd)` |\n| **`q`** | Quantile Function (Inverse CDF) | `qnorm(p, mean, sd)` |\n| **`r`** | Random Number Generation | `rnorm(n, mean, sd)` |\n\n### Common Distribution Functions\n\nThis pattern applies to all major distributions:\n\n| Distribution | Density/PMF | CDF | Quantile | Random |\n| :--- | :--- | :--- | :--- | :--- |\n| **Normal** | `dnorm()` | `pnorm()` | `qnorm()` | `rnorm()` |\n| **Binomial** | `dbinom()` | `pbinom()` | `qbinom()` | `rbinom()` |\n| **Poisson** | `dpois()` | `ppois()` | `qpois()` | `rpois()` |\n| **Exponential** | `dexp()` | `pexp()` | `qexp()` | `rexp()` |\n| **Gamma** | `dgamma()` | `pgamma()` | `qgamma()` | `rgamma()` |\n| **Beta** | `dbeta()` | `pbeta()` | `qbeta()` | `rbeta()` |\n| **Weibull** | `dweibull()` | `pweibull()` | `qweibull()` | `rweibull()` |\n| **Log-normal** | `dlnorm()` | `plnorm()` | `qlnorm()` | `rlnorm()` |\n| **Negative Binomial** | `dnbinom()` | `pnbinom()` | `qnbinom()` | `rnbinom()` |\n\n### Example Usage\n\n\n#### Probability of exactly 2 successes in 5 trials with p=0.5\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndbinom(2, size = 5, prob = 0.5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.3125\n```\n\n\n:::\n:::\n\n\n\n\n\n#### Probability of ≤3 adverse events when λ=2\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nppois(3, lambda = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.8571235\n```\n\n\n:::\n:::\n\n\n\n\n#### 95th percentile of Normal(0,1)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nqnorm(0.95, mean = 0, sd = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1.644854\n```\n\n\n:::\n:::\n\n\n\n\n#### Generate 10 random costs from Gamma(shape=2, rate=0.1)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nrgamma(10, shape = 2, rate = 0.1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 26.221904 12.200817 14.863575  8.827533 39.415386  3.231701 11.057500\n [8] 26.907655 30.696813 12.367086\n```\n\n\n:::\n:::\n\n\n\n\n\n## Visualizing Distributions with `curve()`\n\nThe `curve()` function is useful for visualizing the probability density function (PDF) or probability mass function (PMF) of a distribution.\n\n### 1. Normal Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncurve(dnorm(x, mean = 2, sd = 1), from = -2, to = 6, main = \"Normal(μ=2, σ=1)\", ylab = \"Density\", xlab = \"x\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### 2. Gamma Distribution\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncurve(dgamma(x, shape = 2, rate = 1), from = 0, to = 8, main = \"Gamma(α=2, β=1)\", ylab = \"Density\", xlab = \"x\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n### 3. Beta Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncurve(dbeta(x, shape1 = 2, shape2 = 5), from = 0, to = 1, main = \"Beta(α=2, β=5)\", ylab = \"Density\", xlab = \"x\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n### 4. Exponential Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncurve(dexp(x, rate = 0.5), from = 0, to = 8, main = \"Exponential(λ=0.5)\", ylab = \"Density\", xlab = \"x\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n### 5. Weibull Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncurve(dweibull(x, shape = 2, scale = 1), from = 0, to = 3, main = \"Weibull(k=2, λ=1)\", ylab = \"Density\", xlab = \"x\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### 6. Log-Normal Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncurve(dlnorm(x, meanlog = 0, sdlog = 0.5), from = 0, to = 5, main = \"Log-Normal(μ=0, σ=0.5)\", ylab = \"Density\", xlab = \"x\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### 7. Binomial Distribution (PMF)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nx <- 0:10\nplot(x, dbinom(x, size = 10, prob = 0.5), type = \"h\", lwd = 3, \n     main = \"Binomial(n=10, p=0.5)\", ylab = \"P(X = k)\", xlab = \"Number of Successes (k)\")\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n### 8. Poisson Distribution (PMF)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nx <- 0:15\nplot(x, dpois(x, lambda = 4), type = \"h\", lwd = 3, main = \"Poisson(λ=4)\", ylab = \"P(X = k)\", xlab = \"Number of Events (k)\")\npoints(x, dpois(x, lambda = 4), pch = 16)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### 9. Negative Binomial Distribution (PMF)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nx <- 0:20\nplot(x, dnbinom(x, size = 2, prob = 0.4), type = \"h\", lwd = 3,\n     main = \"Negative Binomial(r=2, p=0.4)\", ylab = \"P(X = k)\", xlab = \"Number of Failures (k)\")\npoints(x, dnbinom(x, size = 2, prob = 0.4), pch = 16)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n## Case Study\n\n### Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\nlibrary(here)\n\ndf <- readxl::read_excel(here(\"data\", \"distributions_hta_casestudy.xlsx\"))\n\nkableExtra::kable(df, format.args = list(big.mark = \",\", scientific = FALSE))\n```\n\n::: {.cell-output-display}\n\n\n|variable                   | root_definition|distribution |\n|:--------------------------|---------------:|:------------|\n|cost_annualmaintenance     | 150,000.0000000|Gamma        |\n|cost_icuday                |   9,350.0000000|Gamma        |\n|cost_ip_day                |   2,300.0000000|Gamma        |\n|cost_pcv13                 |   3,955.0000000|Gamma        |\n|cost_vaccination_transport |     100.0000000|Gamma        |\n|cost_vaccineadministration |     116.0000000|Gamma        |\n|hospitaldays_Ipd           |      19.9000000|Gamma        |\n|hospitaldays_Npp           |      12.0000000|Gamma        |\n|icudays_ipd                |       9.0000000|Gamma        |\n|icudays_npp                |       6.0000000|Gamma        |\n|initprob_highrisk          |       1.0000000|LogN         |\n|prob_death                 |       0.0091000|LogN         |\n|prob_deathippneumonia      |       0.0136000|LogN         |\n|prob_ipddisabled           |       0.0128000|LogN         |\n|prob_ippneumonia           |       0.0035997|LogN         |\n|prob_meningitis            |       0.0000212|LogN         |\n|prob_meningitisdeath       |       0.1538000|LogN         |\n|prob_nppdisabled           |       0.0064000|LogN         |\n|prob_oppneumonia           |       0.0169631|LogN         |\n|prob_sepsis                |       0.0000630|LogN         |\n|prob_sepsisdeath           |       0.1681000|LogN         |\n|prop_icu_ipd               |       0.3100000|LogN         |\n|prop_icu_npp               |       0.1530000|LogN         |\n|u_disabled                 |       0.3000000|Beta         |\n|u_general                  |       0.9283000|Beta         |\n\n\n:::\n:::\n\n\n\n\n\n### Transforming Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nowsa_range <- 0.2\n\ndf <- df |> \n  mutate(\n    low = round((1 - owsa_range) * root_definition, 4),\n    high = round((1 + owsa_range) * root_definition, 4),\n    se = round( (high - low) / (2 * qnorm(0.975)), 4) \n  )\n\ndf <- df |>\n  mutate(\n    # Calculate alpha and beta for Gamma/Beta, meanlog and sdlog for LogN\n    param1 = case_when(\n      distribution == \"Gamma\" ~ (root_definition^2) / (se^2),\n      distribution == \"Beta\" ~ root_definition * ( (root_definition*(1-root_definition)/(se^2)) - 1 ),\n      distribution == \"LogN\" ~ log(root_definition^2 / sqrt(se^2 + root_definition^2)),\n      TRUE ~ NA_real_\n    ),\n    param2 = case_when(\n      distribution == \"Gamma\" ~ root_definition / (se^2),\n      distribution == \"Beta\" ~ (1 - root_definition) * ( (root_definition*(1-root_definition)/(se^2)) - 1 ),\n      distribution == \"LogN\" ~ sqrt(log(1 + (se^2 / root_definition^2))),\n      TRUE ~ NA_real_\n    ),\n    # Create the formatted parameter strings for R with correct argument names\n    parameters = case_when(\n      distribution == \"Gamma\" ~ paste0(\"shape = \", round(param1, 4), \", rate = \", round(param2, 6)),\n      distribution == \"Beta\" ~ paste0(\"shape1 = \", round(param1, 4), \", shape2 = \", round(param2, 4)),\n      distribution == \"LogN\" ~ paste0(\"meanlog = \", round(param1, 4), \", sdlog = \", round(param2, 4)),\n      TRUE ~ \"Distribution not specified\"\n    )\n  )\n```\n:::\n\n\n\n\n### Sampling and Visualising Distributions \n\n#### For Gamma Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf |> \n  filter(distribution == \"Gamma\") |> \n  slice(1) |> \n  select(parameters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  parameters                     \n  <chr>                          \n1 shape = 96.0365, rate = 0.00064\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nset.seed(123)\nsamples_gamma <- rgamma(1000, shape = 96.0365, rate = 0.00064)\n\nhist(samples_gamma, probability = TRUE, breaks = 30, col = \"lightblue\", \n     main = \"Histogram with Gamma PDF\", xlab = \"Value\")\ncurve(dgamma(x, shape = 96.0365, rate = 0.00064), col = \"red\", add = TRUE, lwd = 2)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n\n#### For Beta Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf |> \n  filter(distribution == \"Beta\") |> \n  slice(1) |> \n  select(parameters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  parameters                         \n  <chr>                              \n1 shape1 = 66.9818, shape2 = 156.2909\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nset.seed(123)\nsamples_beta <- rbeta(1000, shape1 = 66.9818, shape2 = 156.2909) \n\nhist(samples_beta, probability = TRUE, breaks = 30, col = \"lightgreen\", \n     main = \"Histogram with Beta PDF\", xlab = \"Value\", xlim = c(0,1))\ncurve(dbeta(x, shape1 = 66.9818, shape2 = 156.2909), col = \"blue\", add = TRUE, lwd = 2)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n\n#### For Log Normal Distribution\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf |> \n  filter(distribution == \"LogN\") |> \n  slice(1) |> \n  select(parameters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 1\n  parameters                       \n  <chr>                            \n1 meanlog = -0.0052, sdlog = 0.1017\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nset.seed(123)\nsamples_lnorm <- rlnorm(1000, meanlog = -0.0052, sdlog = 0.1017) # Use your calculated param1 & param2\n\nhist(samples_lnorm, probability = TRUE, breaks = 30, col = \"lightcoral\", \n     main = \"Histogram with Log-Normal PDF\", xlab = \"Value\")\ncurve(dlnorm(x, meanlog = -0.0052, sdlog = 0.1017), col = \"purple\", add = TRUE, lwd = 2)\n```\n\n::: {.cell-output-display}\n![](prob_dist_20250908_v1_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "prob_dist_20250908_v1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}