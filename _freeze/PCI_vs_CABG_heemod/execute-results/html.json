{
  "hash": "f9c4b9ccb9cc3c1bcc85b45f78e8fac9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Step by step Time Homogeneous Markov Model in heemod: PCI vs CABG\"\nformat:\n  html:\n    toc: true\n    toc-depth: 3\n    number-sections: true\n    self-contained: true\nexecute:\n  echo: true\n  warning: false\n  message: false\n---\n\n\n\n\n## Model description\n\nWe compare **Percutaneous Coronary Intervention (PCI)** vs **Coronary Artery Bypass Grafting (CABG)** over 10 annual cycles in a **time-homogeneous** cohort Markov model.  \n\n## Transition probabilities - how patients move between states\n\n**Idea:** Each row of the transition matrix is “from state”; each column is “to state”. Rows must sum to **1**. Death’s row is `[0,0,0,1]`.\n\n**Function you’ll see:** `define_transition()` builds a transition object that strategies will use.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(heemod)\n\n# State names\nnm <- c(\"Stable\",\"MI\",\"Reintervention\",\"Death\")\n\n# --- PCI transition matrix (rows = from, columns = to) ---\nmat_pci <- define_transition(\n  \n    0.70, 0.15, 0.10, 0.05,  # from Stable\n    0.50, 0.00, 0.20, 0.30,  # from MI\n    0.80, 0.00, 0.00, 0.20,  # from Reintervention\n    0.00, 0.00, 0.00, 1.00   # from Death (absorbing)\n  ,\n  state_names = nm\n)\n\n\n# --- CABG transition matrix ---\nmat_cabg <- define_transition(\n    0.80, 0.08, 0.07, 0.05,  # from Stable\n    0.60, 0.00, 0.10, 0.30,  # from MI\n    0.80, 0.00, 0.00, 0.20,  # from Reintervention\n    0.00, 0.00, 0.00, 1.00   # from Death\n  ,\n  state_names = nm\n)\n```\n:::\n\n\n\n**Common pitfalls:** Rows not summing to 1; mismatched state names between matrices and strategies; Death row not absorbing.\n\n## Plot model\n### PCI\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mat_pci)\n```\n\n::: {.cell-output-display}\n![](PCI_vs_CABG_heemod_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n### CABG\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(mat_cabg)\n```\n\n::: {.cell-output-display}\n![](PCI_vs_CABG_heemod_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n## State values\n\n**Idea:** Each state accrues **cost** and **QALY** for the time spent there in a cycle.\n\n**Function you’ll see:** `define_state()` sets these values. Here we **discount inside states** using `discount(rate)`. All states must expose the **same** value names.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Economic parameters\ncost_discount_rate <- 0.03\nqaly_discount_rate <- 0.03\n\ncost_stable <-  50000\ncost_mi     <- 20000\ncost_reint  <- 150000\ncost_death  <- 0\n\nutil_stable <- 0.85\nutil_mi     <- 0.60\nutil_reint  <- 0.70\nutil_death  <- 0.00\n\n# Define states (cost_total = state cost + strategy-specific upfront (only in cycle 1))\n# Define states: discount inside states (no cycle logic)\nstate_Stable <- define_state(\n  cost_total = discount(cost_stable, cost_discount_rate),\n  qaly       = discount(util_stable, qaly_discount_rate)\n)\n\nstate_MI <- define_state(\n  cost_total = discount(cost_mi, cost_discount_rate),\n  qaly       = discount(util_mi, qaly_discount_rate)\n)\n\nstate_Reintervention <- define_state(\n  cost_total = discount(cost_reint, cost_discount_rate),\n  qaly       = discount(util_reint, qaly_discount_rate)\n)\n\nstate_Death <- define_state(\n  cost_total = 0,\n  qaly       = discount(util_death, qaly_discount_rate)\n)\n```\n:::\n\n\n\n**Common pitfalls:** Inconsistent value names across states; double discounting (don’t also pass `discount=` to `run_model()` if you discount here).\n\n\nOne-time upfront costs — cleanly at baseline\n\n**Idea:** Charge the procedure once at the start (cycle 0), not every cycle.\n\n**Function you’ll see:** `define_starting_values()` inside `define_strategy()` adds **one-time** values at baseline. The names must match what we pass to `run_model(cost=..., effect=...)`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# One-time costs at baseline\nupfront_pci  <- 200000\nupfront_cabg <- 300000\n```\n:::\n\n\n\n\n## Strategy definitions — assemble transitions, states, and upfronts\n\n**Function you’ll see:** `define_strategy(transition=..., <state>=..., starting_values=...)`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstrat_pci <- define_strategy(\n  transition = mat_pci,\n  Stable = state_Stable,\n  MI = state_MI,\n  Reintervention = state_Reintervention,\n  Death = state_Death,\n  starting_values = define_starting_values(\n    cost_total = upfront_pci,  # one-time baseline cost\n    qaly       = 0             # no baseline QALY\n  )\n)\n\nstrat_cabg <- define_strategy(\n  transition = mat_cabg,\n  Stable = state_Stable,\n  MI = state_MI,\n  Reintervention = state_Reintervention,\n  Death = state_Death,\n  starting_values = define_starting_values(\n    cost_total = upfront_cabg,  # one-time baseline cost\n    qaly       = 0             # no baseline QALY\n  )\n)\n```\n:::\n\n\n\n**Common pitfalls:** Strategy states must match transition state names and order; all states must expose the same value names.\n\n## Running the model— simulate the cohort\n\n**Function you’ll see:** `run_model()` executes the Markov model across cycles.\n\n- We choose `method = \"end\"` (values counted at cycle end).\n- Because we discounted inside states, we **do not** pass `discount=` here.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- run_model(\n  pci  = strat_pci,\n  cabg = strat_cabg,\n  cycles = 10,\n  init = c(Stable = 1000, MI = 0, Reintervention = 0, Death = 0),\n  method = \"beginning\",\n  cost = cost_total,\n  effect = qaly\n)\n```\n:::\n\n\n\n\n**Alternative pattern:** Put raw values in states and pass `discount = c(cost=0.05, effect=0.05)` here (but then don’t use `discount()` in states).\n\n## Read results — totals, ICER, and NMB\n\n**Functions you’ll see:** `summary()`  (version‑dependent). The totals already include the **one‑time starting values** we set earlier.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwtp <- c(150000, 300000)\nsummary(res, threshold = wtp)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n2 strategies run for 10 cycles.\n\nInitial state counts:\n\nStable = 1000\nMI = 0\nReintervention = 0\nDeath = 0\n\nCounting method: 'beginning'.\n\nValues:\n\n     cost_total     qaly\npci   543798010 4957.920\ncabg  653200098 5367.794\n\nNet monetary benefit difference:\n\n       150000    3e+05\npci  47921.02     0.00\ncabg     0.00 13560.05\n\nEfficiency frontier:\n\npci -> cabg\n\nDifferences:\n\n     Cost Diff. Effect Diff.     ICER Ref.\ncabg   109402.1    0.4098738 266916.5  pci\n```\n\n\n:::\n:::\n\n\n\n\n**Formulas to remember:**  \n- `ICER = (Cost_CABG − Cost_PCI) / (QALY_CABG − QALY_PCI)`  \n- `NMB = QALY * WTP − Cost`\n\n\n\n## Visualise — see how the cohort and values evolve\n\n**Function you’ll see:** `plot(res, ...)` with built‑in panels.\n\n### Patient Counts by Strategy\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nplot(res, type = \"counts\")+theme_minimal()\n```\n\n::: {.cell-output-display}\n![](PCI_vs_CABG_heemod_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n### Patient Counts by State\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(res, type = \"counts\", panel =\"by_state\", free_y = TRUE)+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](PCI_vs_CABG_heemod_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n### Costs by Strategy\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(res, type = \"values\", panel = \"by_value\",\n     free_y = TRUE) +\n  scale_color_brewer(\n    name = \"Strategy\",\n    palette = \"Set1\"\n  )+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](PCI_vs_CABG_heemod_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n## Trace tables\n### Population over cycles\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopulation_over_cycles <- get_counts(res)\n\nt_population <- population_over_cycles |> \n  tidyr::pivot_wider(names_from = .strategy_names, values_from = count) |>\n  dplyr::arrange(model_time)\n\nlibrary(DT)\nDT::datatable(t_population,\n              extensions = 'Buttons',\n              options = list(\n                dom = 'Bfrtip',\n                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),\n                pageLength = 5\n              ))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-41a6b546e887080632e2\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-41a6b546e887080632e2\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\"],[1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10],[\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\",\"Stable\",\"MI\",\"Reintervention\",\"Death\"],[1000,0,0,0,700,150,100,50,645,105,100,150,584,96.75,85.5,233.75,525.5749999999999,87.59999999999999,77.75,309.075,473.9024999999999,78.83624999999999,70.0775,377.18375,427.2118749999999,71.08537499999998,63.15749999999999,438.54525,385.1169999999999,64.08178124999998,56.93826249999999,493.8629562499999,347.1734006249999,57.76754999999999,51.32805624999999,543.7309931249999,312.9676004374999,52.07601009374998,46.27085006249999,588.68553940625],[1000,0,0,0,800,80,70,50,744,64,64,128,684.8000000000001,59.52,58.48,197.2,630.336,54.78400000000001,53.88800000000001,260.992,580.2496000000001,50.42688,49.60192000000001,319.7216,534.1373440000001,46.41996800000001,45.66016000000001,373.782528,491.6899840000001,42.73098752000001,42.03161088000001,423.5474176,452.6158684160001,39.33519872000001,38.69139763200001,469.357535232,416.6469320704001,36.20926947328001,35.61663066112001,511.5271677952]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>model_time<\\/th>\\n      <th>state_names<\\/th>\\n      <th>pci<\\/th>\\n      <th>cabg<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Bfrtip\",\"buttons\":[\"copy\",\"csv\",\"excel\",\"pdf\",\"print\"],\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"model_time\",\"targets\":1},{\"name\":\"state_names\",\"targets\":2},{\"name\":\"pci\",\"targets\":3},{\"name\":\"cabg\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n### Costs and QALYs over cycles\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncosts_qalys_over_cycles <- get_values(res)\nt_costs_qalys <- costs_qalys_over_cycles |> \n  tidyr::pivot_wider(names_from = .strategy_names, values_from = value) |>\n  dplyr::arrange(model_time, value_names)\nDT::datatable(t_costs_qalys,\n              extensions = 'Buttons',\n              options = list(\n                dom = 'Bfrtip',\n                buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),\n                pageLength = 5\n              ))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-419c4c3b0017da10cb95\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-419c4c3b0017da10cb95\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10],[\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\",\"cost_total\",\"qaly\"],[250000000,850,51456310.67961165,733.009708737864,46517108.11575078,642.1434630973702,40229627.3451649,562.1715213406459,35266938.51467941,491.9763799983049,30867139.87079111,430.5911225534942,27013830.41912402,376.8608544685051,23643257.91243209,329.8348829941702,20692965.40382142,288.6771366637241,18110831.84877711,252.6551476973158],[350000000,850,50582524.27184466,754.3689320388349,45320011.31115091,674.5216325761146,40451457.68339211,602.8294349823881,36157584.58612154,538.7586437462004,32314451.28505968,481.4992799153638,28880050.44690476,430.3252350786133,25810663.57681633,384.590013517036,23067490.67517539,343.7155582732541,20615864.06398269,307.1852643616605]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>model_time<\\/th>\\n      <th>value_names<\\/th>\\n      <th>pci<\\/th>\\n      <th>cabg<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Bfrtip\",\"buttons\":[\"copy\",\"csv\",\"excel\",\"pdf\",\"print\"],\"pageLength\":5,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"model_time\",\"targets\":1},{\"name\":\"value_names\",\"targets\":2},{\"name\":\"pci\",\"targets\":3},{\"name\":\"cabg\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[5,10,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n",
    "supporting": [
      "PCI_vs_CABG_heemod_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<script src=\"site_libs/jszip-1.13.6/jszip.min.js\"></script>\n<script src=\"site_libs/pdfmake-1.13.6/pdfmake.js\"></script>\n<script src=\"site_libs/pdfmake-1.13.6/vfs_fonts.js\"></script>\n<link href=\"site_libs/dt-ext-buttons-1.13.6/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/dataTables.buttons.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.html5.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.colVis.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.print.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}